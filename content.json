{"pages":[{"title":"关于","text":"","link":"/about/index.html"}],"posts":[{"title":"BaseApp框架简介","text":"一个封装了加载状态、屏幕适配和权限请求的Android基础MVC&amp;MVP开发框架。👉项目地址👈 集成 在项目根目录下的 build.gradle 文件中加入 12345allprojects { repositories { maven { url 'https://jitpack.io' } }} 在项目app模块下的 build.gradle 文件中加入 123456789android { viewBinding { enabled = true }}dependencies { implementation 'com.github.EIong:BaseApp:1.1.1'} 使用 在应用 Application 中设置框架 屏幕适配用副单位pt进行开发，dp和sp不会进行屏幕适配，可参考Android 屏幕适配终结者 自定义加载UI，加载状态适配器可参考BaseLoadingAdapter 123456789BaseManager // 设置是否开启屏幕适配（默认开启） .setOpenAdaptScreen(true) // 设置屏幕适配方向（默认宽度） .setAdaptScreenDirection(BaseManager.Direction.WIDTH) // 设置屏幕适配数值（默认1080） .setAdaptScreenValue(1080) // 设置加载状态适配器（默认BaseLoadingAdapter） .setLoadingAdapter(BaseLoadingAdapter()) MVC Activity继承 BaseActivity，传入相应ViewBinding 1class MvcActivity : BaseActivity&lt;ActivityMvcBinding&gt;() MVC Fragment继承 BaseFragment，传入相应ViewBinding 1class MvcFragment : BaseFragment&lt;FragmentMvcBinding&gt;() MVP 编写 Contract 契约类 1234interface MvpContract { interface MvpPresenter : BaseContract.BasePresenter interface MvpView : BaseContract.BaseView} MVP Presenter继承 BasePresenter，传入相应View，实现契约类中Presenter接口 1class MvpPresenter : BasePresenter&lt;MvpContract.MvpView&gt;(), MvpContract.MvpPresenter MVP Activity继承 BaseActivity，传入相应ViewBinding和Presenter，实现契约类中View接口 1class MvpActivity : BaseActivity&lt;ActivityMvpBinding, MvpPresenter&gt;(), MvpContract.MvpView MVP Fragment继承 BaseFragment，传入相应ViewBinding和Presenter，实现契约类中View接口 1class MvpFragment : BaseFragment&lt;FragmentMvpBinding, MvpPresenter&gt;(), MvpContract.MvpView Activity和Fragment中通过 vb 拿到ViewBinding对象，p 拿到Presenter对象，Presenter中通过 v 拿到View对象。 覆写此方法实现初始化操作 1override fun initialize(savedInstanceState: Bundle?) 请求权限 permissionsTip：请求权限提示 1requestPermissions(permissionsTip, permission1, permission2, ...) 覆写此方法实现请求权限弹窗自定义UI activity： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Activity message： &nbsp;&nbsp;消息内容 cancel： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;取消按钮文本 confirm： &nbsp;&nbsp;&nbsp;&nbsp;确认按钮文本 onCancel： &nbsp;点击取消回调 onConfirm：点击确认回调 12345678override fun showBaseDialog( activity: Activity, message: String, cancel: String, confirm: String, onCancel: () -&gt; Unit, onConfirm: () -&gt; Unit) 覆写此方法实现授予所请求权限后的操作 1override fun grantedAllPermissions() 显示加载中 1showLoading() 显示加载成功 1showSuccess() 显示加载失败 retry：点击重试任务，可为null 1showFailed(retry) 显示空数据 retry：点击重试任务，可为null 1showEmpty(retry) 指定View上显示加载中 view：指定View 1showLoadingOverView(view) 指定View上显示加载成功 view：指定View 1showSuccessOverView(view) 指定View上显示加载失败 view： 指定View retry：点击重试任务，可为null 1showFailedOverView(view, retry) 指定View上显示空数据 view： 指定View retry：点击重试任务，可为null 1showEmptyOverView(view, retry) 添加点击事件 1addClick(view1, view2, ...) 覆写此方法实现点击事件 1override fun onClick(v: View) 显示控件 1showViews(view1, view2, ...) 隐藏控件（INVISIBLE） 1hideViews(view1, view2, ...) 隐藏控件（GONE） 1goneViews(view1, view2, ...) 开启日志加密 password：密码，长度为16个字节 1BaseManager.enableLogEncryption(password) 查看日志 activity： &nbsp;&nbsp;&nbsp;活动 password：密码，长度为16个字节 1BaseManager.goToLog(activity, password) 说明 框架中引入了Gloading（超轻量级，深度解耦Android App中全局加载中、加载失败及空数据视图），主要用于加载状态显示，引入了AndroidUtilCode（一个强大易用的安卓工具类库，它合理地封装了安卓开发中常用的函数，具有完善的 Demo 和单元测试，利用其封装好的APIs 可以大大提高开发效率），主要用于屏幕适配和权限请求，如果需使用以上框架，可以不重新引入，Respect~。","link":"/2021/06/30/BaseApp%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/"},{"title":"GitHub国内镜像","text":"推荐镜像地址 https://hub.fastgit.org https://github.com.cnpmjs.org git替换命令1git config --global url.https://hub.fastgit.org.insteadOf https://github.com 1git config --global url.https://github.com.cnpmjs.org.insteadOf https://github.com 查看git配置信息1git config --global --list git取消替换1git config --global --unset url.https://hub.fastgit.org.insteadof 1git config --global --unset url.https://github.com.cnpmjs.org.insteadof 建议 不要在镜像地址登录，防止出现安全问题。","link":"/2021/05/27/GitHub%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"}],"tags":[{"name":"Android","slug":"Android","link":"/tags/Android/"},{"name":"MVC","slug":"MVC","link":"/tags/MVC/"},{"name":"MVP","slug":"MVP","link":"/tags/MVP/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"}],"categories":[{"name":"框架","slug":"框架","link":"/categories/%E6%A1%86%E6%9E%B6/"},{"name":"笔记","slug":"笔记","link":"/categories/%E7%AC%94%E8%AE%B0/"}]}